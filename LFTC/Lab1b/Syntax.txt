decllist = declaration | declaration ";" decllist

program =  "PROGRAM" "{" cmpdstmt "}"

cmpdstmt = "BEGIN" stmtlist  "END"

declaration = "type" IDENTIFIER 

type1 = "int" | "char" | "string"

arraydecl = identifier type1[nr]  

type  = type1|arraydecl

stmtlist = stmt | stmt ";" stmtlist

stmt = simplstmt | structstmt

simplstmt = assignstmt  | iostmt | declaration

assignstmt = IDENTIFIER "=" expression

expression = expression "+" term | expression "-" term | term | term "+" expression | term "-" expression

term = term "*" factor | factor | term "/" factor | factor

factor = ["("] expression [")"] | IDENTIFIER

iostmt = "read" "(" "identifier" ")" | "display" "(" "identifier" ")" | "readInt" "(" "identifier" ")"

structstmt = stmtlist | ifstmt | whilestmt

ifstmt = "if" (condition) "{" stmt ["else" "{" stmt "}"] "}"

whilestmt = "while" (condition) ["{"] stmtlist ["}"]

condition = expression RELATION expression

RELATION = "<" | "<=" | "=" | "<>" | ">=" | ">"