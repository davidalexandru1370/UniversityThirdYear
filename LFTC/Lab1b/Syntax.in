program ::= "VAR" decllist ";" cmpdstmt "."

decllist ::= declaration | declaration ";" decllist

declaration ::= IDENTIFIER ":" type

type1 ::= "int" | "char" | "string"

arraydecl ::= identifier "[" nr "]" "OF" type1

type  ::= type1|arraydecl

stmtlist ::= stmt | stmt ";" stmtlist

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt  | iostmt | declaration

assignstmt ::= IDENTIFIER "=" expression

expression ::= expression "+" term | expression "-" term | term

term ::= term "*" factor | factor | term "/" factor | factor

factor ::= "(" expression ")" | IDENTIFIER

iostmt ::= "read" "(" "identifier" ")" | "display" "(" "identifier" ")" | "readInt" "(" "identifier" ")"

structstmt ::= stmtlist | ifstmt | whilestmt

ifstmt ::= "if" (condition) "{" stmt ["ELSE" "{" stmt "}"] "}"

whilestmt ::= "while" (condition) "{" stmtlist "}"

condition ::= expression RELATION expression

RELATION ::= "<" | "<=" | "=" | "<>" | ">=" | ">"